cmake_minimum_required(VERSION 3.0)
project(fast_ber VERSION "0.3")

if (NOT DEFINED CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 11)
endif()

option(SKIP_TESTING "Skip building tests" OFF)
option(SKIP_AUTO_GENERATION "Use checked in lexer rather than generating with bison" OFF)

if (NOT ${SKIP_TESTING})
  enable_testing()
endif()

set(ABSEIL_LIBS absl::base absl::container absl::strings absl::variant absl::optional absl::time)
if (EXISTS "${CMAKE_SOURCE_DIR}/3rd_party/abseil-cpp/CMakeLists.txt")
  add_subdirectory("3rd_party/abseil-cpp")
  set(SKIP_INSTALL TRUE)
elseif (EXISTS "${CMAKE_BINARY_DIR}/conanbuildinfo.cmake")
  include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
  conan_basic_setup()
  set(ABSEIL_LIBS ${CONAN_LIBS_ABSEIL})
else()
  find_package(absl REQUIRED)
endif()

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(default_build_type Release)
set(BENCHMARKS_INCLUDE_ASN1C true)

if (CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  add_compile_options("-O3" "-Wall" "-Wextra" "-pedantic" "-Wcast-align" "-Wpointer-arith" "-Wshadow")
  add_compile_options("-Wfloat-equal" "-Wuninitialized")
  add_compile_options("-Wno-missing-field-initializers") # Stop spam on g++-4.8
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wold-style-cast")

  if (CMAKE_BUILD_TYPE MATCHES "Debug")
    add_compile_options("-g")
    if (${FB_ENABLE_SANITIZER})
      message("Enabled sanitizer")
      add_compile_options("-fsanitize=address" "-Werror")
      set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address -static-libsan")

      #add_compile_options("-fsanitize=undefined" "-Werror")
      #set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=undefined -static-libsan")
    endif()
  else()
    add_definitions("-DNDEBUG")
    if (NOT "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
      # Link time optimisation. Disabled on clang due to issue on travis
      set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -flto")
    endif()
    set(SKIP_AUTO_GENERATION true)
  endif()
else()
  set(SKIP_AUTO_GENERATION true) # Can't autogen on windows, used checked in files instead
  set(BENCHMARKS_INCLUDE_ASN1C false)
  set(CTEST_CONFIGURATION_TYPE "${CMAKE_BUILD_TYPE}")
  add_compile_options("/W4")
  add_compile_options("-DNOMINMAX")
  if (CMAKE_BUILD_TYPE MATCHES "Release")
    add_compile_options("/O2")
  endif ()
endif()

add_subdirectory(src)
if (DEFINED CMAKE_TESTING_ENABLED)
  add_subdirectory(test)
  add_subdirectory(sample)
  add_subdirectory(benchmarks)
endif()
